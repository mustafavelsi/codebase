pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = credentials('b68d02f6-62fc-4ce8-86d4-1b16277c851b')
        DOCKER_CREDENTIALS = credentials('2')
        KUBECONFIG = credentials('786')
        DOCKER_IMAGE = 'your-dockerhub-username/php-app'
        GIT_REPO = 'https://github.com/mustafavelsi/codebase.git'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'master',
                    credentialsId: "${GITHUB_CREDENTIALS}",
                    url: "${GIT_REPO}"
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:latest")
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS}") {
                        docker.image("${DOCKER_IMAGE}:latest").push()
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    writeFile file: 'deployment.yml', text: """
                    apiVersion: apps/v1
                    kind: Deployment
                    metadata:
                      name: php-app-deployment
                    spec:
                      replicas: 2
                      selector:
                        matchLabels:
                          app: php-app
                      template:
                        metadata:
                          labels:
                            app: php-app
                        spec:
                          containers:
                          - name: php-app
                            image: ${DOCKER_IMAGE}:latest
                            ports:
                            - containerPort: 80
                    """

                    writeFile file: 'service.yml', text: """
                    apiVersion: v1
                    kind: Service
                    metadata:
                      name: php-app-service
                    spec:
                      type: NodePort
                      selector:
                        app: php-app
                      ports:
                        - protocol: TCP
                          port: 80
                          targetPort: 80
                          nodePort: 30002
                    """

                    sh 'kubectl apply -f deployment.yml --namespace=default'
                    sh 'kubectl apply -f service.yml --namespace=default'
                }
            }
        }
    }

    post {
        success {
            echo "Deployment was successful!"
        }
        failure {
            echo "Deployment failed!"
        }
    }
}
